// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  name          String?
  username      String?
  email         String?        @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          String
  BasicDetails  BasicDetails[]
  socialLinks   socialLinks[]
}

model BasicDetails {
  id                  String  @id @default(cuid())
  userId              String  @unique
  name                String?
  bio                 String?
  profilePhoto        Bytes?
  backgroundPhoto     Bytes?
  whatsappCountryCode String?
  phoneCountryCode    String?
  whatsapp            String?
  phone               String?
  email               String?
  user                User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model socialLinks {
  id     String @id @default(cuid())
  userId String
  link   String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model verificationToken {
  id       String   @id @default(cuid())
  email    String
  token    String   @unique
  expirers DateTime

  @@unique([email, token])
}

model resetToken {
  id       String   @id @default(cuid())
  email    String
  token    String   @unique
  expirers DateTime

  @@unique([email, token])
}
